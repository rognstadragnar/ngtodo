{"version":3,"sources":["../../src/options/index.js"],"names":[],"mappings":";;;;;;;;sBAAmB,QAAQ;;;;oBACV,MAAM;;;;sBACT,QAAQ;;;;uBACE,eAAe;;;;wBAClB,YAAY;;;;AAEjC,IAAM,OAAO,GAAG,SAAV,OAAO,CAAI,IAAI,EAAK;AACxB,MAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;AAElB,MAAI,GAAG,oBAAE,QAAQ,CAAC,IAAI,wBAAW,CAAC;;AAElC,MAAI,IAAI,CAAC,SAAS,IAAI,CAAC,oBAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE;AACtD,QAAI,CAAC,SAAS,IAAI,GAAG,CAAC;GACvB;;AAED,MAAI,IAAI,CAAC,UAAU,IAAI,CAAC,oBAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;AACxD,QAAI,CAAC,UAAU,IAAI,GAAG,CAAC;GACxB;;AAED,MAAI,IAAI,CAAC,OAAO,IAAI,oBAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;AACjD,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;GAC1C;;AAED,MAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACnB,QAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC1C,QAAI,CAAC,SAAS,GAAG,oBAAO,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;GACjF;;AAED,MAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACnB,QAAI,CAAC,SAAS,GAAG,kBAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAK,IAAI,CAAC,SAAS,WAAQ,CAAC;GACrE;;AAED,MAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACtB,QAAI,CAAC,YAAY,SAAO,IAAI,CAAC,SAAS,AAAE,CAAC;GAC1C;;AAED,SAAO,IAAI,CAAC;CACb,CAAC;;AAEF,OAAO,CAAC,QAAQ,wBAAW,CAAC;;qBAEb,OAAO","file":"index.js","sourcesContent":["import crypto from 'crypto';\nimport path from 'path';\nimport _ from 'lodash';\nimport packageJson from '../../package';\nimport defaults from './defaults';\n\nconst options = (opts) => {\n  opts = opts || {};\n\n  opts = _.defaults(opts, defaults);\n\n  if (opts.staticUrl && !_.endsWith(opts.staticUrl, '/')) {\n    opts.staticUrl += '/';\n  }\n\n  if (opts.publicPath && !_.endsWith(opts.publicPath, '/')) {\n    opts.publicPath += '/';\n  }\n\n  if (opts.hmrRoot && _.endsWith(opts.hmrRoot, '/')) {\n    opts.hmrRoot = opts.hmrRoot.slice(0, -1);\n  }\n\n  if (!opts.buildHash) {\n    let serializedOpts = JSON.stringify(opts);\n    opts.buildHash = crypto.createHash('sha1').update(serializedOpts).digest('hex');\n  }\n\n  if (!opts.cacheFile) {\n    opts.cacheFile = path.join(opts.cacheDir, `${opts.buildHash}.json`);\n  }\n\n  if (!opts.hmrNamespace) {\n    opts.hmrNamespace = `/${opts.buildHash}`;\n  }\n\n  return opts;\n};\n\noptions.defaults = defaults;\n\nexport default options;"]}