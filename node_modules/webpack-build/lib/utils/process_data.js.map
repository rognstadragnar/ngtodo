{"version":3,"sources":["../../src/utils/process_data.js"],"names":[],"mappings":";;;;;;;;yBAAsB,YAAY;;;;sBACpB,QAAQ;;;;AAEtB,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,GAAG,EAAK;;;AAG1B,MAAI,oBAAE,QAAQ,CAAC,GAAG,CAAC,EAAE;AACnB,WAAO,4BAAU,GAAG,CAAC,CAAC;GACvB;;AAED,MAAI,KAAK,GAAG;AACV,QAAI,EAAE,GAAG,CAAC,WAAW,CAAC,IAAI;AAC1B,WAAO,EAAE,4BAAU,GAAG,CAAC,OAAO,CAAC;GAChC,CAAC;;AAEF,MAAI,GAAG,CAAC,KAAK,EAAE;AACb,SAAK,CAAC,KAAK,GAAG,4BAAU,GAAG,CAAC,KAAK,CAAC,CAAC;GACpC;;AAED,SAAO,KAAK,CAAC;CACd,CAAC;;AAEF,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,GAAG,EAAE,IAAI,EAAK;;;AAGjC,MAAI,KAAK,GAAG,IAAI,CAAC;AACjB,MAAI,GAAG,EAAE;AACP,SAAK,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;GACzB;;AAED,MAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC3C,QAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;GACvD;;AAED,SAAO;AACL,SAAK,EAAE,KAAK;AACZ,QAAI,EAAE,IAAI,IAAI,IAAI;GACnB,CAAC;CACH,CAAC;;qBAEa,WAAW","file":"process_data.js","sourcesContent":["import stripAnsi from 'strip-ansi';\nimport _ from 'lodash';\n\nconst cleanError = (err) => {\n  // Strips ansi sequences from the error's strings\n\n  if (_.isString(err)) {\n    return stripAnsi(err);\n  }\n\n  let error = {\n    type: err.constructor.name,\n    message: stripAnsi(err.message)\n  };\n\n  if (err.stack) {\n    error.stack = stripAnsi(err.stack);\n  }\n\n  return error;\n};\n\nconst processData = (err, data) => {\n  // Processes data for communication between processes\n\n  let error = null;\n  if (err) {\n    error = cleanError(err);\n  }\n\n  if (data && data.stats && data.stats.errors) {\n    data.stats.errors = data.stats.errors.map(cleanError);\n  }\n\n  return {\n    error: error,\n    data: data || null\n  };\n};\n\nexport default processData;"]}