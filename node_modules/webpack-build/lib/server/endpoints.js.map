{"version":3,"sources":["../../src/server/endpoints.js"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;sBACJ,UAAU;;;;+BACP,qBAAqB;;;;4BACvB,kBAAkB;;;;wBAChB,aAAa;;;;uBACd,YAAY;;;;mBAChB,QAAQ;;;;uBACA,eAAe;;;;iCACf,uBAAuB;;;;qBAEhC;AACb,OAAK,EAAE,eAAC,GAAG,EAAE,GAAG,EAAK;AACnB,QAAI,KAAK,8BAA4B,qBAAY,OAAO,AAAE,CAAC;;AAE3D,QAAI,WAAW,GAAG,oBAAE,GAAG,CAAC,sBAAS,QAAQ,EAAE,UAAC,OAAO,EAAE,GAAG,EAAK;AAC3D,sBAAc,GAAG,iBAAY,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,WAAQ;KAC3E,CAAC,CAAC;AACH,QAAI,SAAS,GAAG,oBAAE,GAAG,CAAC,0BAAO,MAAM,EAAE,UAAC,KAAK,EAAE,GAAG,EAAK;AACnD,4CAEM,GAAG,iBAAY,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,6BAEjD;KACH,CAAC,CAAC;AACH,OAAG,CAAC,GAAG,mDAGM,KAAK,2DAGR,KAAK,8DAEJ,IAAI,CAAC,SAAS,+BAAW,IAAI,EAAE,CAAC,CAAC,uDAElC,WAAW,oDAEX,SAAS,+CAGjB,CAAC;GACJ;AACD,OAAK,EAAE,eAAC,GAAG,EAAE,GAAG,EAAK;AACnB,QAAI,IAAI,GAAG,0BAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAI,MAAM,GAAG,sBAAI,cAAc,EAAE,IAAI,CAAC,CAAC;AACvC,UAAM,2BAAyB,IAAI,CAAC,SAAS,CAAG,CAAC;;AAEjD,4BAAM,IAAI,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACzB,SAAG,CAAC,IAAI,CAAC,oCAAY,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KAClC,CAAC,CAAC;GACJ;CACF","file":"endpoints.js","sourcesContent":["import _ from 'lodash';\nimport build from '../build';\nimport defaults from '../options/defaults';\nimport caches from '../caches/caches';\nimport wrappers from '../wrappers';\nimport options from '../options';\nimport log from '../log';\nimport packageJson from '../../package';\nimport processData from '../utils/process_data';\n\nexport default {\n  index: (req, res) => {\n    let title = `webpack-build-server v${packageJson.version}`;\n\n    let wrapperList = _.map(wrappers.wrappers, (wrapper, key) => {\n      return `<li>${key} &mdash; ${JSON.stringify(wrapper.opts, null, 2)}</li>`;\n    });\n    let cacheList = _.map(caches.caches, (cache, key) => {\n      return `\n        <li>\n          ${key} &mdash; ${JSON.stringify(cache, null, 2)}\n        </li>\n      `;\n    });\n    res.end(`\n      <html>\n      <head>\n        <title>${title}</title>\n      </head>\n      <body>\n        <h1>${title}</h1>\n        <h2>Default options</h2>\n        <pre>${JSON.stringify(defaults, null, 2)}</pre>\n        <h2>Wrappers</h2>\n        <ul>${wrapperList}</ul>\n        <h2>Caches</h2>\n        <ul>${cacheList}</ul>\n      </body>\n      </html>\n    `);\n  },\n  build: (req, res) => {\n    let opts = options(req.body);\n    let logger = log('build-server', opts);\n    logger(`request received for ${opts.buildHash}`);\n\n    build(opts, (err, data) => {\n      res.json(processData(err, data));\n    });\n  }\n};\n"]}