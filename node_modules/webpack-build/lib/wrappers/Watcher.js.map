{"version":3,"sources":["../../src/wrappers/Watcher.js"],"names":[],"mappings":"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","file":"Watcher.js","sourcesContent":["import _ from 'lodash';\nimport log from '../log';\n\nclass Watcher {\n  constructor(compiler, opts) {\n    this.opts = opts;\n    this.logger = log('watcher', opts);\n\n    // Callback stores\n    this._onDone = []; // function(err, stats) {}\n    this._onceDone = []; // function(err, stats) {}\n    this._onInvalid = []; // function() {}\n    this._onFailure = []; // function(err) {}\n\n    // State and compilation output\n    this.isWatching = false;\n    this.watcher = null;\n    this.isReady = false;\n    this.err = null;\n    this.stats = null;\n\n    // Hook in to the compiler\n    this.compiler = compiler;\n    this.compiler.plugin('done', this.handleDone.bind(this));\n    this.compiler.plugin('invalid', this.handleInvalid.bind(this));\n    this.compiler.plugin('failed', this.handleFailure.bind(this));\n  }\n  watch() {\n    this.logger('starting compiler');\n    this.isWatching = true;\n    this.watcher = this.compiler.watch(\n      {\n        aggregateTimeout: this.opts.aggregateTimeout,\n        poll: this.opts.poll\n      },\n      () => {/* no-op */}\n    );\n  }\n  onDone(cb) {\n    this._onDone.push(cb);\n  }\n  onceDone(cb) {\n    if (this.isReady && (this.err || this.stats)) {\n      return cb(this.err, this.stats);\n    }\n\n    this._onceDone.push(cb);\n\n    if (!this.isWatching) {\n      this.watch();\n    }\n  }\n  onInvalid(cb) {\n    this._onInvalid.push(cb);\n  }\n  onFailure(cb) {\n    this._onFailure.push(cb);\n  }\n  invalidate() {\n    this.compiler.applyPlugins('invalid');\n  }\n  close(cb) {\n    if (this.watcher) {\n      this.logger('closing watcher');\n      this.isWatching = false;\n      this.watcher.close(cb);\n    }\n  }\n  handleDone(stats) {\n    this.logger('done signal received');\n\n    this.isReady = true;\n    this.err = null;\n    this.stats = null;\n\n    // Defer in case the bundle has been invalidated\n    // during the compilation process\n    process.nextTick(() => {\n      if (!this.isReady) return;\n\n      if (stats.hasErrors()) {\n        this.logger('errors encountered during compilation');\n        this.err = _.first(stats.compilation.errors);\n      }\n\n      this.stats = stats;\n\n      this.logger('passing data up');\n\n      this._onDone.forEach(\n        (cb) => cb(this.err, this.stats)\n      );\n\n      this.callOnceDone();\n    });\n  }\n  callOnceDone() {\n    let _onceDone = this._onceDone;\n    this._onceDone = [];\n    _onceDone.forEach(\n      (cb) => cb(this.err, this.stats)\n    );\n  }\n  handleInvalid() {\n    this.logger('invalid signal received');\n\n    this.isReady = false;\n    this.err = null;\n    this.stats = null;\n\n    this._onInvalid.forEach((cb) => cb());\n  }\n  handleFailure(err) {\n    this.logger('failure signal received', err);\n\n    this.err = err;\n    this.stats = null;\n\n    this._onFailure.forEach((cb) => cb(err));\n\n    this.callOnceDone();\n  }\n}\n\nexport default Watcher;"]}